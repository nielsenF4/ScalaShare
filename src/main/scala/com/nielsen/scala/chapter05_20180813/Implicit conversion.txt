一、隐式转换:
所谓隐式转换函数指的是那种以implicit关键字声明的带有单个参数的函数。这样的函数将被自动应用，将值从一种类型转换为另一种类型。

二、利用隐式转换丰富现有类库的功能

三、引入隐式转换
scala会考虑如下的隐式转换函数：
1. 位于源或目标类型的伴生对象中的隐式函数。
2. 位于当前作用域可以以单个标识符指代的隐式函数。
比如我们的int2Fraction函数，我们将它放到Fraction伴生对象中，这样它就能被自动使用。
或者放入其它地方，如果你想使用这个转换，就需要引入这个隐式转换函数。
可以直接import函数来指定特定的隐式转换函数，而不会被其它隐式转换函数给干扰。
如果排除某个隐式转换函数：xxx.xxx.(fraction2Double => _,_)


四、隐式转换规则:
隐式转换在如下三种各不相同的情况会被考虑：
	1.当表达式的类型与预期的类型不同时
	2.当对象访问一个不存在的成员时
	3.当对象调用某个方法，而该方法的参数声明与传入参数不匹配时
有三种情况编译器不会尝试使用隐式转换：
	1.如果代码能够在不使用隐式转换的前提下通过编译。
	2.编译器不会尝试同时执行多个转换。
	3.同时存在多个合法的转换则报错。

五、隐式参数：
函数或方法可以带有一个标记为implicit的参数列表，这种情况下，编译器将会查找缺省值，提供给该函数或方法。
编译器会在如下两个地方查找这个隐式对象：
	1.在当前作用域所有可以用单个标识符指代的满足类型要求的val和def。
	2.与所要求类型相关联的类型的伴生对象。相关联的类型包括所要求类型本身，以及它的类型参数

 六、利用隐式参数进行隐式转换